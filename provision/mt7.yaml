- name: provisioning
  hosts: all
  tasks:
    - name: Set timezone to Asia/Tokyo
      shell: timedatectl set-timezone Asia/Tokyo
      become: true

    - name: yum update
      yum: 
        name=*
        state=present
      become: true

    - name: Install epel
      yum: 
        name=epel-release
        state=present
      become: true

    - name: Add nginx repository
      yum_repository:
        name: nginx
        description: nginx repo
        baseurl: "http://nginx.org/packages/centos/7/$basearch/"
        gpgcheck: no
        enabled: yes
      become: true

    - name: Install nginx
      yum:
        name: nginx
        state: present
      become: true

    - name: Install Development Tools
      yum:
        name: "@Development Tools"
        state: present
      become: true

    - name: Install wget
      yum:
        name: "wget"
        state: present
      become: true

    - name: Add MySQL repository
      yum_repository:
        name: mysql-community
        description: MySQL 5.7 Community Server
        baseurl: "http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/"
        gpgcheck: no
        enabled: yes
      become: true

    - name: Install MySQL
      yum: pkg={{ item }} state=present
      with_items:
        - mysql-community-server
        - mysql-community-client
        - mysql-community-libs
        - mysql-community-libs-compat
        - mysql-community-devel
        - MySQL-python
      become: true

    - name: Start the MySQL service
      service:
        name: mysqld
        state: started
        enabled: true
      become: true

    - name: check .my.cnf exists
      stat:
        path: /root/.my.cnf
      register: mycnf_file
      become: true

    - name: Get temporary password
      shell: cat /var/log/mysqld.log | grep "temporary password" | awk '{print $11}'
      register: mysql_default_password
      when: not mycnf_file.stat.exists
      become: true

    - name: deploy init .my.cnf
      template:
        src: ./files/_my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0644
      when: not mycnf_file.stat.exists
      become: true

    - name: Change MySQL password validation to the easy way
      shell: |
        mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;"
        mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;"
      when: not mycnf_file.stat.exists
      become: true

    - name: Change MySQL root user password
      shell: |
        mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';"
      when: not mycnf_file.stat.exists
      become: true

    - name: Deploy changed .my.cnf
      template:
        src: ./files/my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0644
      become: true

    - name: Remove all MySQL anonymous user
      mysql_user:
        name: ''
        state: absent
        host: localhost
      become: true

    - name: Create MySQL database
      mysql_db:
        name: mt7
        state: present
        encoding: utf8
      become: true

    - name: Create MySQL user
      mysql_user:
        name: vagrant
        password: vagrant
        priv: '*.*:ALL,GRANT'
        state: present
      become: true

    - name: Restart mysqld
      service:
        name: mysqld
        state: restarted
      become: true
    - name: Install memcached
      yum: pkg=memcached state=present
      become: true

    - name: Start the memcached service
      service:
        name: memcached
        state: started
        enabled: true
      become: true

    - name: Add remi repository
      yum:
        name: "https://rpms.remirepo.net/enterprise/remi-release-7.rpm"
        state: present
      become: true

    - name: Install PHP
      yum: pkg={{ item }} state=present enablerepo=remi enablerepo=php72 enablerepo=epel
      with_items:
        - redis
        - php
        - php-common
        - php-cli
        - php-fpm
        - php-json
        - php-intl
        - php-mbstring
        - php-pdo
        - php-mysqlnd
        - php-pecl-memcached
      become: true

    - name: Check plenv directory
      stat: path=~/.plenv
      register: plenv

    - name: Install plenv
      shell: |
        git clone https://github.com/tokuhirom/plenv.git ~/.plenv
        echo 'export PATH="$HOME/.plenv/bin:$PATH"' >> ~/.bash_profile
        echo 'eval "$(plenv init -)"' >> ~/.bash_profile
      when: not plenv.stat.exists

    - name: Install perl-build
      shell: git clone https://github.com/tokuhirom/Perl-Build.git ~/.plenv/plugins/perl-build/
      when: not plenv.stat.exists

    - name: Install MT perl
      shell: bash -lc "plenv install 5.18.4"
      when: not plenv.stat.exists

    - name: plenv local
      shell: bash -lc "plenv local 5.18.4"
      args:
        chdir: /vagrant

    - name: Install cpanm
      shell: bash -lc "plenv install-cpanm"
      args:
        chdir: /vagrant
    - name: Install CPAN pre-requires
      yum: pkg={{ item }} state=present enablerepo=remi enablerepo=php72 enablerepo=epel
      with_items:
        - openssl
        - openssl-devel
        - expat
        - expat-devel
        - ImageMagick
        - ImageMagick-devel
        - libxml2
        - libxml2-devel
      become: true

    - name: Install Plack
      environment:
        PLENV_VERSION: "5.18.4"
        PATH: "/home/vagrant/.plenv/shims:/home/vagrant/.plenv/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/vagrant/.local/bin:/home/vagrant/bin"
      cpanm: name={{item}} notest=True
      with_items:
        - Task::Plack
        - XMLRPC::Transport::HTTP::Plack

    - name: Install DBI
      environment:
        PLENV_VERSION: "5.18.4"
        PATH: "/home/vagrant/.plenv/shims:/home/vagrant/.plenv/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/vagrant/.local/bin:/home/vagrant/bin"
      cpanm: name={{item}} notest=True
      with_items:
        - DBI
        - DBD::mysql

    - name: Install Optional CPAN Modules
      environment:
        PLENV_VERSION: "5.18.4"
        PATH: "/home/vagrant/.plenv/shims:/home/vagrant/.plenv/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/vagrant/.local/bin:/home/vagrant/bin"
      cpanm: name={{item}} notest=True
      with_items:
        - Digest::SHA
        - HTML::Entities
        - HTML::Parser
        - SOAP::Lite
        - File::Temp
        - Scalar::Util
        - List::Util
        - Imager
        - Storable
        - Crypt::DSA
        - Crypt::SSLeay
        - MIME::Base64
        - Cache::Memcached
        - XML::Atom
        - Archive::Tar
        - IO::Compress::Gzip
        - IO::Uncompress::Gunzip
        - Archive::Zip
        - XML::SAX
        - Digest::SHA1
        - Net::SMTP
        - Authen::SASL
        - Net::SMTP::SSL
        - Net::SMTP::TLS
        - IO::Socket::SSL
        - Net::SSLeay
        - Safe
        - Digest::MD5
        - Text::Balanced
        - XML::Parser
        - Time::HiRes
        - Mozilla::CA
        - XML::SAX::ExpatXS
        - XML::LibXML::SAX

    - name: Configure Movable Type
      template:
        src: ./files/mt-config.cgi
        dest: /vagrant/public/mt/mt-config.cgi
        mode: 0755

    - name: Install supervisor
      yum:
        name: "supervisor"
        state: present
      become: true

    - name: Configure supervisor(1)
      template:
        src: ./files/mt7.sh
        dest: /etc/supervisord.d/mt7.sh
        owner: root
        group: root
        mode: 0755
      become: true

    - name: Configure supervisor(2)
      template:
        src: ./files/mt7.ini
        dest: /etc/supervisord.d/mt7.ini
        owner: root
        group: root
        mode: 0644
      become: true

    - name: Start supervisor
      service: name=supervisord enabled=Yes state=started
      become: true

    - name: Configure nginx
      template:
        src: ./files/default.conf
        dest: /etc/nginx/conf.d/default.conf
        owner: root
        group: root
        mode: 0644
      become: true

    - name: Configure php-fpm
      template:
        src: ./files/www.conf
        dest: /etc/php-fpm.d/www.conf
        owner: root
        group: root
        mode: 0644
      become: true

    - name: php session directory
      file: path=/vagrant/.php/session state=directory owner=vagrant group=vagrant mode=0755

    - name: Start php-fpm
      service: name=php-fpm enabled=Yes state=started
      become: true

    - name: Start nginx
      service: name=nginx enabled=Yes state=started
      become: true

    - name: Configure /vagrant mounted hook
      template:
        src: ./files/80-vagrant-mounted.rules
        dest: /etc/udev/rules.d/80-vagrant-mounted.rules
        owner: root
        group: root
        mode: 0644
      become: true

    - name: Configure /vagrant mounted hook script
      template:
        src: ./files/.udev-vagrant-mounted.sh
        dest: /root/.udev-vagrant-mounted.sh
        owner: root
        group: root
        mode: 0700
      become: true